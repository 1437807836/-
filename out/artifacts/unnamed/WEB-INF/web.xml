<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  <display-name></display-name>	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>UploadHandleServlet</servlet-name>
        <servlet-class>com.yxbx.servlet.UploadHandleServlet</servlet-class>
</servlet>

<servlet-mapping>
    <servlet-name>UploadHandleServlet</servlet-name>
    <url-pattern>/servlet/UploadHandleServlet.servlet</url-pattern>
</servlet-mapping>

<servlet>
     <servlet-name>ListFileServlet</servlet-name>
     <servlet-class>com.yxbx.servlet.ListFileServlet</servlet-class>
</servlet>
 
<servlet-mapping>
     <servlet-name>ListFileServlet</servlet-name>
    <url-pattern>/servlet/ListFileServlet.servlet</url-pattern>
</servlet-mapping>

<servlet>
      <servlet-name>DownLoadServlet</servlet-name>
      <servlet-class>com.yxbx.servlet.DownLoadServlet</servlet-class>
</servlet>
 
<servlet-mapping>
      <servlet-name>DownLoadServlet</servlet-name>
      <url-pattern>/servlet/DownLoadServlet</url-pattern>
</servlet-mapping>
  	
	<!-- 加载spring配置文件 -->
  <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:applicationContext*.xml
        </param-value>
    </context-param>
    
    <listener>
     <listener-class>
         org.springframework.web.context.ContextLoaderListener
     </listener-class>
 </listener>
    <!-- 把session的关闭延迟到jsp页面显示之后，在配在struts2上面。索然解决了懒加载，但是导致connect长期未关闭，Session生命周期非常长，要改-->
  <!--   <filter>
        <filter-name>OpenSessionInView</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>OpenSessionInView</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    <!-- struts2 的配置 -->
 <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
  	</filter-class>
  	<init-param>
               <!--  //固定格式-->
                <param-name>actionPackages</param-name> 
                <param-value>com.yxbx.action</param-value> 
    </init-param> 
  </filter>
  
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
 
  </filter-mapping>
  
 
  
  
  
  </web-app>
